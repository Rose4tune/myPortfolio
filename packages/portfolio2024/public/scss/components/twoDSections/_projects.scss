@use "../../helpers" as *;

.project {
  position: relative;
  width: 100vw;
  background: linear-gradient(
    180deg,
    hsl(var(--gray-back-100)) 0%,
    hsla(var(--pink-back-090), 0.8) 30%,
    hsla(var(--pink-back-080), 0.6) 60%,
    hsl(var(--pink-back-080), 0.8) 100%
  );

  &-stickyFrame {
    position: sticky;
    top: 11vh;
    margin: 11vh 0 16.7vh;
  }

  &-wrap {
    display: flex;
    gap: 3rem;
    align-items: flex-start;
    justify-content: center;
    position: relative;
  }

  &-nav {
    position: static;
    margin-top: 5vh;
  }

  &-picture {
    position: relative;
    width: vw(1150);
    height: vh(756);
    outline: vw(20) solid hsla(var(--pink-back-060), 0.3);
    border: 2px solid hsl(var(--white));
    z-index: -2;
    overflow: hidden;

    &::after {
      display: block;
      content: "";
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: hsla(var(--gray-fore-080), 0.1);
      background-blend-mode: multiply;
    }

    &-img {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      opacity: 0;
      transition: opacity 0.5s ease-in-out;
      object-fit: cover;

      &.active {
        opacity: 1;
      }
    }

    .font_rampartOne {
      position: absolute;
      bottom: vh(30);
      left: vw(20);
      @include font($s: 90, $cr: hsl(var(--white)));
      z-index: 10;
    }
  }

  &-detail {
    position: absolute;
    bottom: vh(-100);
    left: vw(653);

    .tripleLayered,
    .tripleLayered::before,
    .tripleLayered::after {
      background: linear-gradient(
        250deg,
        hsla(var(--gray-back-100), 0.1) 0%,
        hsl(var(--gray-back-100), 0.8) 40%
      );
    }

    .tripleLayered {
      width: vw(1000);
      height: vh(430);
      padding: vw(40);
    }

    &-wrap {
      position: relative;
      display: none;
      padding-bottom: 2rem;
      opacity: 0;
      transition: opacity 0.3s ease, transform 0.3s ease;

      &.active {
        display: block;
        width: 100%;
        height: 100%;
        opacity: 1;
      }
    }
    &-title {
      display: flex;
      align-items: flex-start;
      gap: 1rem;
      @include font($s: 28, $wght: 600);
    }
    &-period {
      @include font($s: 20, $wght: 400, $cr: hsl(var(--gray-fore-040)));
    }
    &-stack {
      margin: 1rem 0 3rem;
      @include font($cr: hsl(var(--gray-fore-040)));
    }
    &-des {
      height: calc(100% - 9.5rem);
      overflow-y: auto;
      scrollbar-width: thin;
      @include font($ln: 1.3);
    }

    .caption {
      @include position($b: 0, $l: 0);
    }
  }

  &-sparkle_double {
    width: vw(105);
    @include position($b: 0, $l: 0);
    transform: translate(100%, 100%);
  }

  &-arrow_curved {
    width: vh(158);
    @include position($b: 0, $r: 0);
    transform: translate(-30%, 110%);
  }

  &-sparkle {
    width: vw(43);
    @include position($b: 0, $l: 0);
    transform: translate(-150%, 50%);
  }
}

// 반응형
@include tablet {
  .project {
    &-stickyFrame {
      top: 5vh;
      height: 90vh;
      margin: 5vh 0 5vh;
    }

    &-wrap {
      gap: 4rem;
      align-items: flex-end;
      justify-content: flex-end;
      flex-direction: column-reverse;
      height: 100%;
      padding: 0 5rem 0 6rem;
    }

    &-nav {
      margin-top: 0;

      .doubleLine {
        @include font($align: right);
        &::before,
        &::after {
          margin-right: 0;
        }
      }
    }

    &-picture {
      width: vw(285, $mobileVW);
      height: vh(290, $mobileVH);
      margin-right: auto;

      .font_rampartOne {
        display: none;
      }
    }

    &-detail {
      bottom: 0;
      left: vw(50, $mobileVW);

      .tripleLayered {
        width: vw(286, $mobileVW);
      }
    }

    &-arrow_curved {
      width: vw(76, $mobileVW);
      transform: translate(30%, 100%);
    }
  }
}

@include mobileL {
  .project {
    .doubleLine {
      $lineMargin: rem(20);
      &::before {
        margin: 0 0 $lineMargin auto;
      }
      &::after {
        margin: $lineMargin 0 0 auto;
      }
    }

    &-detail {
      &-des {
        column-count: 1;
        column-gap: 0;
      }
    }
  }
}
